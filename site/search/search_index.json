{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"General Personal Trainer REST API Documentation This REST API is designed to manage the relationship between personal trainers and their customers. It provides a set of CRUD (Create, Read, Update, Delete) operations to manage both customers and their associated training sessions. Overview: The API is structured around two main resources: Customers and Trainings . Customers represent the individuals who are receiving personal training. Each customer has attributes such as name and contact information. Trainings represent the individual training sessions that a customer has with their personal trainer. Each training session has attributes such as date, time, duration, and the specific exercises performed. There is a one-to-many relationship between customers and trainings, meaning that each customer can have multiple associated training sessions, but each training session is associated with only one customer. Base URL https://customerrestservice-personaltraining.rahtiapp.fi/api Reset Database To reset database you can use the following request that deletes all data from the database and re-populate it with the original demo data. POST https://customerrestservice-personaltraining.rahtiapp.fi/reset Response: Upon successful reset, the API will return a 200 OK status code and the response body contains text: DB reset done . If the reset operation fails for any reason, the API will return an appropriate error status code and message.","title":"General"},{"location":"#general","text":"","title":"General"},{"location":"#personal-trainer-rest-api-documentation","text":"This REST API is designed to manage the relationship between personal trainers and their customers. It provides a set of CRUD (Create, Read, Update, Delete) operations to manage both customers and their associated training sessions. Overview: The API is structured around two main resources: Customers and Trainings . Customers represent the individuals who are receiving personal training. Each customer has attributes such as name and contact information. Trainings represent the individual training sessions that a customer has with their personal trainer. Each training session has attributes such as date, time, duration, and the specific exercises performed. There is a one-to-many relationship between customers and trainings, meaning that each customer can have multiple associated training sessions, but each training session is associated with only one customer.","title":"Personal Trainer REST API Documentation"},{"location":"#base-url","text":"https://customerrestservice-personaltraining.rahtiapp.fi/api","title":"Base URL"},{"location":"#reset-database","text":"To reset database you can use the following request that deletes all data from the database and re-populate it with the original demo data. POST https://customerrestservice-personaltraining.rahtiapp.fi/reset Response: Upon successful reset, the API will return a 200 OK status code and the response body contains text: DB reset done . If the reset operation fails for any reason, the API will return an appropriate error status code and message.","title":"Reset Database"},{"location":"customers/","text":"Customers Base URL https://customerrestservice-personaltraining.rahtiapp.fi/api Endpoints Get All Customers To retrieve all customers , you can use the GET /customers endpoint. Request: No parameters are required for this endpoint. Response: The response is a JSON object with a _embedded field containing an array of customers. Each customer object includes the following fields: firstname : The customer's first name. (string) lastname : The customer's last name. (string) streetaddress : The customer's street address. (string) postcode : The customer's postal code. (string) city : The city where the customer lives. (string) email : The customer's email address. (string) phone : The customer's phone number. (string) _links : A set of links related to the customer. Each link object includes: self : A link to the customer's own information. (string) customer : A link to the customer's information. (string) trainings : A link to the customer's trainings. (string) Example Response { \"_embedded\": { \"customers\": [ { \"firstname\": \"Mark\", \"lastname\": \"Johnson\", \"streetaddress\": \"5th Street\", \"postcode\": \"23110\", \"city\": \"Flintsone\", \"email\": \"john@mail.com\", \"phone\": \"232-2345540\", \"_links\": { \"self\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/customers/1002\" }, \"customer\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/customers/1002\" }, \"trainings\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/customers/1002/trainings\" } } }, // Additional customers... ] } } Get Customer by Id To retrieve a specific customer's details, you can use the GET /customers/{id} endpoint, where {id} is the unique identifier of the customer. Request: The request does not require a request body, only the customer's id as a path parameter. Path Parameters: id (required): The unique identifier of the customer. This is an integer. Example Request: GET /customers/123 Create New Customer To create a new customer you can use POST /customers endpoint. Request: This endpoint requires a JSON object in the request body with the following fields: firstname : The customer's first name. (string, required) lastname : The customer's last name. (string, required) email : The customer's email address. (string, required) phone : The customer's phone number. (string, required) streetaddress : The customer's street address. (string, required) postcode : The customer's postal code. (string, required) city : The city where the customer lives. (string, required) Headers: 'Content-Type': 'application/json' . Example Request: POST https://customerrestservice-personaltraining.rahtiapp.fi/api/customers Content-Type: application/json { \"firstname\": \"John\", \"lastname\": \"Smith\", \"email\": \"j.s@smith.com\", \"phone\": \"343-2332345\", \"streetaddress\": \"Yellow Street 23\", \"postcode\": \"344342\", \"city\": \"Yellowstone\" } Update Customer To update a specific customer's details, you can use the PUT /customers/{id} endpoint, where {id} is the unique identifier of the customer. Request: The request requires the customer's id as a path parameter and the updated customer details in the request body as a JSON string. Headers: Content-Type: 'application/json' Path Parameters: id (required): The unique identifier of the customer. This is an integer. Request Body: The request body should be a JSON object containing the updated customer details. All fields are optional, and only the provided fields will be updated. firstname : The first name of the customer. lastname : The last name of the customer. email : The email address of the customer. phone : The phone number of the customer. streetaddress : The street address of the customer. postcode : The postal code of the customer's address. city : The city of the customer's address. Example Request: PUT /customers/123 Content-Type: application/json { \"firstname\": \"John\", \"lastname\": \"Smith\", \"email\": \"j.s@smith.com\", \"phone\": \"342-2332345\", \"streetaddress\": \"Yellow Street 23\", \"postcode\": \"144342\", \"city\": \"Yellowstone\" } Delete Customer To delete a specific customer, you can use the DELETE /customers/{id} endpoint, where {id} is the unique identifier of the customer. Request: The request does not require a request body, only the customer's `id as a path parameter. Path Parameters: id (required): The unique identifier of the customer. This is an integer. Example Request Response: Upon successful deletion, the API will return a 204 No Content status code. If the customer with the provided id does not exist, the API will return a 404 Not Found status code. Important Note: Deleting a customer will also delete all associated training sessions for that customer. This operation cannot be undone, so ensure that you want to delete both the customer and all their training sessions before making this request.","title":"Customers"},{"location":"customers/#customers","text":"","title":"Customers"},{"location":"customers/#base-url","text":"https://customerrestservice-personaltraining.rahtiapp.fi/api","title":"Base URL"},{"location":"customers/#endpoints","text":"","title":"Endpoints"},{"location":"customers/#get-all-customers","text":"To retrieve all customers , you can use the GET /customers endpoint. Request: No parameters are required for this endpoint. Response: The response is a JSON object with a _embedded field containing an array of customers. Each customer object includes the following fields: firstname : The customer's first name. (string) lastname : The customer's last name. (string) streetaddress : The customer's street address. (string) postcode : The customer's postal code. (string) city : The city where the customer lives. (string) email : The customer's email address. (string) phone : The customer's phone number. (string) _links : A set of links related to the customer. Each link object includes: self : A link to the customer's own information. (string) customer : A link to the customer's information. (string) trainings : A link to the customer's trainings. (string) Example Response { \"_embedded\": { \"customers\": [ { \"firstname\": \"Mark\", \"lastname\": \"Johnson\", \"streetaddress\": \"5th Street\", \"postcode\": \"23110\", \"city\": \"Flintsone\", \"email\": \"john@mail.com\", \"phone\": \"232-2345540\", \"_links\": { \"self\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/customers/1002\" }, \"customer\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/customers/1002\" }, \"trainings\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/customers/1002/trainings\" } } }, // Additional customers... ] } }","title":"Get All Customers"},{"location":"customers/#get-customer-by-id","text":"To retrieve a specific customer's details, you can use the GET /customers/{id} endpoint, where {id} is the unique identifier of the customer. Request: The request does not require a request body, only the customer's id as a path parameter. Path Parameters: id (required): The unique identifier of the customer. This is an integer. Example Request: GET /customers/123","title":"Get Customer by Id"},{"location":"customers/#create-new-customer","text":"To create a new customer you can use POST /customers endpoint. Request: This endpoint requires a JSON object in the request body with the following fields: firstname : The customer's first name. (string, required) lastname : The customer's last name. (string, required) email : The customer's email address. (string, required) phone : The customer's phone number. (string, required) streetaddress : The customer's street address. (string, required) postcode : The customer's postal code. (string, required) city : The city where the customer lives. (string, required) Headers: 'Content-Type': 'application/json' . Example Request: POST https://customerrestservice-personaltraining.rahtiapp.fi/api/customers Content-Type: application/json { \"firstname\": \"John\", \"lastname\": \"Smith\", \"email\": \"j.s@smith.com\", \"phone\": \"343-2332345\", \"streetaddress\": \"Yellow Street 23\", \"postcode\": \"344342\", \"city\": \"Yellowstone\" }","title":"Create New Customer"},{"location":"customers/#update-customer","text":"To update a specific customer's details, you can use the PUT /customers/{id} endpoint, where {id} is the unique identifier of the customer. Request: The request requires the customer's id as a path parameter and the updated customer details in the request body as a JSON string. Headers: Content-Type: 'application/json' Path Parameters: id (required): The unique identifier of the customer. This is an integer. Request Body: The request body should be a JSON object containing the updated customer details. All fields are optional, and only the provided fields will be updated. firstname : The first name of the customer. lastname : The last name of the customer. email : The email address of the customer. phone : The phone number of the customer. streetaddress : The street address of the customer. postcode : The postal code of the customer's address. city : The city of the customer's address. Example Request: PUT /customers/123 Content-Type: application/json { \"firstname\": \"John\", \"lastname\": \"Smith\", \"email\": \"j.s@smith.com\", \"phone\": \"342-2332345\", \"streetaddress\": \"Yellow Street 23\", \"postcode\": \"144342\", \"city\": \"Yellowstone\" }","title":"Update Customer"},{"location":"customers/#delete-customer","text":"To delete a specific customer, you can use the DELETE /customers/{id} endpoint, where {id} is the unique identifier of the customer. Request: The request does not require a request body, only the customer's `id as a path parameter. Path Parameters: id (required): The unique identifier of the customer. This is an integer. Example Request Response: Upon successful deletion, the API will return a 204 No Content status code. If the customer with the provided id does not exist, the API will return a 404 Not Found status code. Important Note: Deleting a customer will also delete all associated training sessions for that customer. This operation cannot be undone, so ensure that you want to delete both the customer and all their training sessions before making this request.","title":"Delete Customer"},{"location":"trainings/","text":"Trainings Base URL https://customerrestservice-personaltraining.rahtiapp.fi/api Endpoints Get All Trainings To retrieve all training sessions, you can use the GET /trainings endpoint. Request: The request does not require a request body. Example Request: GET /trainings Response: The response will be a JSON object containing an array of training sessions. Each training session object includes the date, duration, activity, and several links related to the training session. Response Object: The response object will contain an _embedded object, which includes an array of trainings. Each training object will have the following properties: date : The date and time of the training session. duration : The duration of the training session, in minutes. activity : The type of activity performed during the training session. _links : An object containing links related to the training session. self : A link to the training session itself. training : Another link to the training session itself. customer : A link to the customer associated with the training session. { \"_embedded\": { \"trainings\": [ { \"date\": \"2024-04-18T18:59:46.350+00:00\", \"duration\": 30, \"activity\": \"Gym training\", \"_links\": { \"self\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3417\" }, \"training\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3417\" }, \"customer\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3417/customer\" } } }, { \"date\": \"2024-04-19T18:59:46.350+00:00\", \"duration\": 90, \"activity\": \"Zumba\", \"_links\": { \"self\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3418\" }, \"training\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3418\" }, \"customer\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3418/customer\" } } } ] } } Get Trainings with Customer Info To retrieve all training sessions along with their associated customer information, you can use the GET https://customerrestservice-personaltraining.rahtiapp.fi/gettrainings endpoint. Request: The request does not require a request body. Example Request: GET https://customerrestservice-personaltraining.rahtiapp.fi/gettrainings Response: The response will be a JSON object containing an array of training sessions. Each training session object includes the id, date, duration, activity, and the associated customer's information. id : The unique identifier of the training session. date : The date and time of the training session. duration : The duration of the training session, in minutes. activity : The type of activity performed during the training session. customer : An object containing the associated customer's information. Example Response: [ { \"id\": 3417, \"date\": \"2024-04-18T18:59:46.350+00:00\", \"duration\": 30, \"activity\": \"Gym training\", \"customer\": { \"id\": 1087, \"firstname\": \"John\", \"lastname\": \"Johnson\", \"streetaddress\": \"5th Street\", \"postcode\": \"23110\", \"city\": \"Flintsone\", \"email\": \"john@mail.com\", \"phone\": \"232-2345540\" } }, { \"id\": 3418, \"date\": \"2024-04-19T18:59:46.350+00:00\", \"duration\": 90, \"activity\": \"Zumba\", \"customer\": { \"id\": 1088, \"firstname\": \"Mary\", \"lastname\": \"Philips\", \"streetaddress\": \"Hill Street 3\", \"postcode\": \"23322\", \"city\": \"Flintsone\", \"email\": \"m.philips@mail.com\", \"phone\": \"232-310122\" } } ] Add Training To add a new training session and link it to a customer, you can use the POST /trainings endpoint. Request: The request requires a JSON object in the request body containing the details of the new training session and a reference link to the customer. Headers: Content-Type: 'application/json' Request Body: The request body should be a JSON object containing the details of the new training session and a reference link to the customer. date : The date of the training session. The format must be ISO-8601 (e.g., \"2024-11-27T09:12:00.000+000\"). activity : The type of activity performed during the training session. duration : The duration of the training session, in minutes. customer : A link to the customer associated with the training session. Example Request: POST /trainings Content-Type: application/json { \"date\": \"2024-01-01T12:00:00.000+000\", \"activity\": \"Spinning\", \"duration\": \"50\", \"customer\": \"https://myserver.personaltrainer.api/api/customers/123\" } Response: The response will be a JSON object containing the details of the newly created training session. If the creation is successful, the API will return a 201 Created status code. Delete Training To delete a specific training session, you can use the DELETE /trainings/{id} endpoint, where {id} is the unique identifier of the training session. Request: The request does not require a request body, only the training session's id as a path parameter. Path Parameters: id (required): The unique identifier of the training session. This is an integer. Example Request: DELETE /trainings/123 Response: Upon successful deletion, the API will return a 204 No Content status code. If the training session with the provided id does not exist, the API will return a 404 Not Found status code.","title":"Trainings"},{"location":"trainings/#trainings","text":"","title":"Trainings"},{"location":"trainings/#base-url","text":"https://customerrestservice-personaltraining.rahtiapp.fi/api","title":"Base URL"},{"location":"trainings/#endpoints","text":"","title":"Endpoints"},{"location":"trainings/#get-all-trainings","text":"To retrieve all training sessions, you can use the GET /trainings endpoint. Request: The request does not require a request body. Example Request: GET /trainings Response: The response will be a JSON object containing an array of training sessions. Each training session object includes the date, duration, activity, and several links related to the training session. Response Object: The response object will contain an _embedded object, which includes an array of trainings. Each training object will have the following properties: date : The date and time of the training session. duration : The duration of the training session, in minutes. activity : The type of activity performed during the training session. _links : An object containing links related to the training session. self : A link to the training session itself. training : Another link to the training session itself. customer : A link to the customer associated with the training session. { \"_embedded\": { \"trainings\": [ { \"date\": \"2024-04-18T18:59:46.350+00:00\", \"duration\": 30, \"activity\": \"Gym training\", \"_links\": { \"self\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3417\" }, \"training\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3417\" }, \"customer\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3417/customer\" } } }, { \"date\": \"2024-04-19T18:59:46.350+00:00\", \"duration\": 90, \"activity\": \"Zumba\", \"_links\": { \"self\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3418\" }, \"training\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3418\" }, \"customer\": { \"href\": \"https://customerrestservice-personaltraining.rahtiapp.fi/api/trainings/3418/customer\" } } } ] } }","title":"Get All Trainings"},{"location":"trainings/#get-trainings-with-customer-info","text":"To retrieve all training sessions along with their associated customer information, you can use the GET https://customerrestservice-personaltraining.rahtiapp.fi/gettrainings endpoint. Request: The request does not require a request body. Example Request: GET https://customerrestservice-personaltraining.rahtiapp.fi/gettrainings Response: The response will be a JSON object containing an array of training sessions. Each training session object includes the id, date, duration, activity, and the associated customer's information. id : The unique identifier of the training session. date : The date and time of the training session. duration : The duration of the training session, in minutes. activity : The type of activity performed during the training session. customer : An object containing the associated customer's information. Example Response: [ { \"id\": 3417, \"date\": \"2024-04-18T18:59:46.350+00:00\", \"duration\": 30, \"activity\": \"Gym training\", \"customer\": { \"id\": 1087, \"firstname\": \"John\", \"lastname\": \"Johnson\", \"streetaddress\": \"5th Street\", \"postcode\": \"23110\", \"city\": \"Flintsone\", \"email\": \"john@mail.com\", \"phone\": \"232-2345540\" } }, { \"id\": 3418, \"date\": \"2024-04-19T18:59:46.350+00:00\", \"duration\": 90, \"activity\": \"Zumba\", \"customer\": { \"id\": 1088, \"firstname\": \"Mary\", \"lastname\": \"Philips\", \"streetaddress\": \"Hill Street 3\", \"postcode\": \"23322\", \"city\": \"Flintsone\", \"email\": \"m.philips@mail.com\", \"phone\": \"232-310122\" } } ]","title":"Get Trainings with Customer Info"},{"location":"trainings/#add-training","text":"To add a new training session and link it to a customer, you can use the POST /trainings endpoint. Request: The request requires a JSON object in the request body containing the details of the new training session and a reference link to the customer. Headers: Content-Type: 'application/json' Request Body: The request body should be a JSON object containing the details of the new training session and a reference link to the customer. date : The date of the training session. The format must be ISO-8601 (e.g., \"2024-11-27T09:12:00.000+000\"). activity : The type of activity performed during the training session. duration : The duration of the training session, in minutes. customer : A link to the customer associated with the training session. Example Request: POST /trainings Content-Type: application/json { \"date\": \"2024-01-01T12:00:00.000+000\", \"activity\": \"Spinning\", \"duration\": \"50\", \"customer\": \"https://myserver.personaltrainer.api/api/customers/123\" } Response: The response will be a JSON object containing the details of the newly created training session. If the creation is successful, the API will return a 201 Created status code.","title":"Add Training"},{"location":"trainings/#delete-training","text":"To delete a specific training session, you can use the DELETE /trainings/{id} endpoint, where {id} is the unique identifier of the training session. Request: The request does not require a request body, only the training session's id as a path parameter. Path Parameters: id (required): The unique identifier of the training session. This is an integer. Example Request: DELETE /trainings/123 Response: Upon successful deletion, the API will return a 204 No Content status code. If the training session with the provided id does not exist, the API will return a 404 Not Found status code.","title":"Delete Training"}]}